const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
require('dotenv').config();

console.log('ü§ñ –ó–∞–ø—É—Å–∫ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ Telegram –±–æ—Ç–∞...');
console.log('–¢–æ–∫–µ–Ω:', process.env.TELEGRAM_BOT_TOKEN ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω');
console.log('Chat ID:', process.env.ADMIN_CHAT_ID ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω');

if (!process.env.TELEGRAM_BOT_TOKEN) {
  console.error('‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω');
  process.exit(1);
}

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: false });
const app = express();
app.use(express.json());

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
async function sendNotification(data) {
  const message = `üè• –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º

üë§ –ü–∞—Ü–∏–µ–Ω—Ç: ${data.name}
üìß Email: ${data.email}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
üìã –¢–µ–º–∞: ${data.subject || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${data.message}
üìû –°–ø–æ—Å–æ–± —Å–≤—è–∑–∏: ${data.preferredContact === 'phone' ? '–¢–µ–ª–µ—Ñ–æ–Ω' : 'Email'}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`;

  try {
    await bot.sendMessage(process.env.ADMIN_CHAT_ID, message);
    console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
    return { success: true };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error.message);
    return { success: false, error: error.message };
  }
}

// API endpoint
app.post('/api/send-appointment', async (req, res) => {
  console.log('üì® –ü–æ–ª—É—á–µ–Ω–∞ –∑–∞—è–≤–∫–∞:', req.body);
  
  const result = await sendNotification(req.body);
  
  if (result.success) {
    res.json({ success: true, message: '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞' });
  } else {
    res.status(500).json({ success: false, error: result.error });
  }
});

// –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
app.get('/test', (req, res) => {
  res.json({ 
    status: 'OK', 
    message: '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç',
    time: new Date().toLocaleString('ru-RU')
  });
});

const PORT = process.env.PORT || 3001;
app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üì° API: http://localhost:${PORT}/api/send-appointment`);
  console.log(`üß™ –¢–µ—Å—Ç: http://localhost:${PORT}/test`);
});

// –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
bot.sendMessage(process.env.ADMIN_CHAT_ID, 'ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
  .then(() => console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ'))
  .catch(err => console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', err.message));
