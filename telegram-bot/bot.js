const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const cors = require('cors');
require('dotenv').config();

const app = express();
app.use(express.json());
app.use(cors());

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const ADMIN_CHAT_ID = process.env.ADMIN_CHAT_ID; // @Pashap1991
const SECOND_ADMIN_CHAT_ID = process.env.SECOND_ADMIN_CHAT_ID; // @sbelyaevvv

if (!BOT_TOKEN) {
  console.error('–û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏–µ–º
async function sendAppointmentNotification(appointmentData) {
  const message = `
üè• <b>–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º</b>

üë§ <b>–ü–∞—Ü–∏–µ–Ω—Ç:</b> ${appointmentData.name}
üìß <b>Email:</b> ${appointmentData.email}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${appointmentData.phone}
üìã <b>–¢–µ–º–∞:</b> ${appointmentData.subject || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> ${appointmentData.message}
üìû <b>–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏:</b> ${appointmentData.preferredContact === 'phone' ? '–¢–µ–ª–µ—Ñ–æ–Ω' : 'Email'}

‚è∞ <b>–í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏:</b> ${new Date().toLocaleString('ru-RU')}
`;

  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    if (ADMIN_CHAT_ID) {
      await bot.sendMessage(ADMIN_CHAT_ID, message, { parse_mode: 'HTML' });
      console.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–µ—Ä–≤–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É');
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    if (SECOND_ADMIN_CHAT_ID) {
      await bot.sendMessage(SECOND_ADMIN_CHAT_ID, message, { parse_mode: 'HTML' });
      console.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Ç–æ—Ä–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É');
    }

    return { success: true, message: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã' };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
    return { success: false, error: error.message };
  }
}

// API endpoint –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
app.post('/api/send-appointment', async (req, res) => {
  try {
    const { name, email, phone, subject, message, preferredContact } = req.body;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!name || !email || !phone || !message) {
      return res.status(400).json({
        success: false,
        error: '–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã'
      });
    }

    const appointmentData = {
      name,
      email,
      phone,
      subject: subject || '',
      message,
      preferredContact: preferredContact || 'phone'
    };

    const result = await sendAppointmentNotification(appointmentData);

    if (result.success) {
      res.json({ success: true, message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞' });
    } else {
      res.status(500).json({ success: false, error: result.error });
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ API:', error);
    res.status(500).json({ success: false, error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, `
üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–∞–ø–∏—Å—è—Ö –Ω–∞ –ø—Ä–∏–µ–º –∫ –ê–ª–∏ –ú—É—Å–ª–∏–º–æ–≤–∏—á—É.

üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞

ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–∞–ø–∏—Å—è—Ö –Ω–∞ –ø—Ä–∏–µ–º.
  `, { parse_mode: 'HTML' });
});

bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, `
üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>

–≠—Ç–æ—Ç –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å—è—Ö –Ω–∞ –ø—Ä–∏–µ–º –∫ –ø–µ–¥–∏–∞—Ç—Ä—É –ê–ª–∏ –ú—É—Å–ª–∏–º–æ–≤–∏—á—É.

üîî <b>–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –±–æ—Ç:</b>
‚Ä¢ –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏–µ–º
‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
‚Ä¢ –í–µ–¥–µ—Ç –ª–æ–≥ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π

üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +7 930 714 0303
‚Ä¢ Telegram: @Pashap1991
‚Ä¢ –ö–ª–∏–Ω–∏–∫–∞: –ü–µ—Ä—Å–æ–Ω–∞, –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥, –°–∏–±–∏—Ä—Å–∫–∞—è 3

‚è∞ <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> –ü–Ω-–í—Å 8:00-20:00
  `, { parse_mode: 'HTML' });
});

bot.onText(/\/status/, (msg) => {
  const chatId = msg.chat.id;
  const status = `
ü§ñ <b>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞</b>

‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
üïê –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}
üìä –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω
üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í–∫–ª—é—á–µ–Ω—ã

–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:
‚Ä¢ @Pashap1991: ${ADMIN_CHAT_ID ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
‚Ä¢ @sbelyaevvv: ${SECOND_ADMIN_CHAT_ID ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
  `;
  
  bot.sendMessage(chatId, status, { parse_mode: 'HTML' });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
  console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

bot.on('polling_error', (error) => {
  console.error('–û—à–∏–±–∫–∞ polling:', error);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3001;
app.listen(PORT, () => {
  console.log(`ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üì° API endpoint: http://localhost:${PORT}/api/send-appointment`);
  console.log(`üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —á–∞—Ç—ã:`);
  console.log(`   ‚Ä¢ @Pashap1991 (${ADMIN_CHAT_ID || '–ù–ï –ù–ê–°–¢–†–û–ï–ù'})`);
  console.log(`   ‚Ä¢ @sbelyaevvv (${SECOND_ADMIN_CHAT_ID || '–ù–ï –ù–ê–°–¢–†–û–ï–ù'})`);
});

// Graceful shutdown
process.on('SIGINT', () => {
  console.log('\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
  bot.stopPolling();
  process.exit(0);
});

module.exports = { bot, sendAppointmentNotification };
