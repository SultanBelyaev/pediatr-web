'use client'

import { motion } from 'framer-motion'
import { useState } from 'react'
import { FaStar, FaUser, FaComment, FaHeart, FaPaperPlane } from 'react-icons/fa'

export default function AddTestimonial() {
  const [formData, setFormData] = useState({
    name: '',
    childAge: '',
    rating: 5,
    service: '',
    message: '',
    agreeToPublish: false,
    isAnonymous: false
  })

  const [isSubmitting, setIsSubmitting] = useState(false)
  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle')

  const services = [
    '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–µ–¥–∏–∞—Ç—Ä–∞',
    '–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –æ—Å–º–æ—Ç—Ä',
    '–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è',
    '–õ–µ—á–µ–Ω–∏–µ –û–†–í–ò',
    '–ù–∞–±–ª—é–¥–µ–Ω–∏–µ –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω–æ–≥–æ',
    '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –ø–∏—Ç–∞–Ω–∏—é',
    '–õ–µ—á–µ–Ω–∏–µ –∞–ª–ª–µ—Ä–≥–∏–∏',
    '–î—Ä—É–≥–æ–µ'
  ]

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value, type } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value
    }))
  }

  const handleRatingChange = (rating: number) => {
    setFormData(prev => ({ ...prev, rating }))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsSubmitting(true)
    
    try {
      // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      const displayName = formData.isAnonymous ? '–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : (formData.name || '–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
      
      // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
      const message = `üìù –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ –≤—Ä–∞—á–µ:

üë§ –ò–º—è: ${displayName}
üë∂ –í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞: ${formData.childAge || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚≠ê –û—Ü–µ–Ω–∫–∞: ${'‚≠ê'.repeat(formData.rating)} (${formData.rating}/5)
üè• –£—Å–ª—É–≥–∞: ${formData.service || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}

üí¨ –û—Ç–∑—ã–≤:
"${formData.message}"

üìÖ –î–∞—Ç–∞: ${new Date().toLocaleDateString('ru-RU')}`

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram (–≤—Ä–µ–º–µ–Ω–Ω–æ, –ø–æ–∫–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω Google Sheets)
      const telegramUrl = `https://t.me/Pashap1991?text=${encodeURIComponent(message)}`
      
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
      window.open(telegramUrl, '_blank')
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      setIsSubmitting(false)
      setSubmitStatus('success')
      
      // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => {
        setSubmitStatus('idle')
        setFormData({
          name: '',
          childAge: '',
          rating: 5,
          service: '',
          message: '',
          agreeToPublish: false,
          isAnonymous: false
        })
      }, 3000)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞:', error)
      setIsSubmitting(false)
      setSubmitStatus('error')
    }
  }

  if (submitStatus === 'success') {
    return (
      <section className="section-padding bg-gray-50">
        <div className="container-custom">
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.5 }}
            className="max-w-2xl mx-auto text-center"
          >
            <div className="bg-white rounded-2xl p-8 shadow-lg">
              <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6">
                <FaHeart className="w-8 h-8 text-green-600" />
              </div>
              <h2 className="text-2xl font-bold text-gray-900 mb-4">
                –û—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!
              </h2>
              <p className="text-gray-600 mb-6">
                –í–∞—à –æ—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!
              </p>
              <div className="text-sm text-gray-500">
                –§–æ—Ä–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä–æ–µ—Ç—Å—è —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥
              </div>
            </div>
          </motion.div>
        </div>
      </section>
    )
  }

  return (
    <section className="section-padding bg-gray-50">
      <div className="container-custom">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-6">
            –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            –í–∞—à –æ—Ç–∑—ã–≤ –ø–æ–º–æ–∂–µ—Ç –¥—Ä—É–≥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ. 
            –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –¥–µ—Ç—Å–∫–æ–º—É –≤—Ä–∞—á—É.
          </p>
        </motion.div>

        <div className="max-w-4xl mx-auto">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
            {/* Form */}
            <motion.div
              initial={{ opacity: 0, x: -30 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
            >
              <form onSubmit={handleSubmit} className="space-y-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –í–∞—à–µ –∏–º—è
                  </label>
                  <div className="relative">
                    <FaUser className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4" />
                    <input
                      type="text"
                      name="name"
                      value={formData.name}
                      onChange={handleInputChange}
                      disabled={formData.isAnonymous}
                      className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent disabled:bg-gray-100 disabled:text-gray-500"
                      placeholder={formData.isAnonymous ? "–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" : "–ò–º—è –§–∞–º–∏–ª–∏—è"}
                    />
                  </div>
                  <div className="mt-2">
                    <label className="flex items-center">
                      <input
                        type="checkbox"
                        name="isAnonymous"
                        checked={formData.isAnonymous}
                        onChange={handleInputChange}
                        className="w-4 h-4 text-primary-600 border-gray-300 rounded focus:ring-primary-500"
                      />
                      <span className="ml-2 text-sm text-gray-600">–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∫–∞–∫ "–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"</span>
                    </label>
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞
                  </label>
                  <input
                    type="text"
                    name="childAge"
                    value={formData.childAge}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 3 –≥–æ–¥–∞"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –û—Ü–µ–Ω–∫–∞ *
                  </label>
                  <div className="flex space-x-2">
                    {[1, 2, 3, 4, 5].map((star) => (
                      <button
                        key={star}
                        type="button"
                        onClick={() => handleRatingChange(star)}
                        className={`w-10 h-10 rounded-full flex items-center justify-center transition-colors duration-200 ${
                          star <= formData.rating
                            ? 'bg-yellow-100 text-yellow-500'
                            : 'bg-gray-100 text-gray-400 hover:bg-gray-200'
                        }`}
                      >
                        <FaStar className="w-5 h-5" />
                      </button>
                    ))}
                  </div>
                  <p className="text-sm text-gray-500 mt-2">
                    {formData.rating === 5 && '–û—Ç–ª–∏—á–Ω–æ!'}
                    {formData.rating === 4 && '–•–æ—Ä–æ—à–æ!'}
                    {formData.rating === 3 && '–ù–æ—Ä–º–∞–ª—å–Ω–æ'}
                    {formData.rating === 2 && '–ü–ª–æ—Ö–æ'}
                    {formData.rating === 1 && '–û—á–µ–Ω—å –ø–ª–æ—Ö–æ'}
                  </p>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –£—Å–ª—É–≥–∞
                  </label>
                  <select
                    name="service"
                    value={formData.service}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É</option>
                    {services.map((service, index) => (
                      <option key={index} value={service}>{service}</option>
                    ))}
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –í–∞—à –æ—Ç–∑—ã–≤ *
                  </label>
                  <div className="relative">
                    <FaComment className="absolute left-3 top-3 text-gray-400 w-4 h-4" />
                    <textarea
                      name="message"
                      value={formData.message}
                      onChange={handleInputChange}
                      required
                      rows={5}
                      className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                      placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –≤—Ä–∞—á—É..."
                    />
                  </div>
                </div>

                <div>
                  <label className="flex items-start">
                    <input
                      type="checkbox"
                      name="agreeToPublish"
                      checked={formData.agreeToPublish}
                      onChange={handleInputChange}
                      required
                      className="mr-3 mt-1"
                    />
                    <span className="text-sm text-gray-600">
                      –Ø —Å–æ–≥–ª–∞—Å–µ–Ω –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –æ—Ç–∑—ã–≤–∞ –Ω–∞ —Å–∞–π—Ç–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö *
                    </span>
                  </label>
                </div>

                <button
                  type="submit"
                  disabled={isSubmitting || !formData.agreeToPublish}
                  className="w-full bg-primary-600 hover:bg-primary-700 disabled:bg-gray-400 text-white font-medium py-4 px-6 rounded-lg transition-colors duration-200 flex items-center justify-center"
                >
                  {isSubmitting ? (
                    <>
                      <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
                      –û—Ç–ø—Ä–∞–≤–ª—è–µ–º...
                    </>
                  ) : (
                    <>
                      <FaPaperPlane className="w-5 h-5 mr-2" />
                      –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
                    </>
                  )}
                </button>
              </form>
            </motion.div>

            {/* Info */}
            <motion.div
              initial={{ opacity: 0, x: 30 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="space-y-8"
            >
              <div className="bg-white rounded-xl p-6 shadow-lg">
                <h3 className="text-xl font-semibold text-gray-900 mb-4">
                  –ü–æ—á–µ–º—É –≤–∞–∂–Ω—ã –æ—Ç–∑—ã–≤—ã?
                </h3>
                <ul className="space-y-3 text-sm text-gray-600">
                  <li className="flex items-start">
                    <span className="w-2 h-2 bg-primary-600 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                    <span>–ü–æ–º–æ–≥–∞—é—Ç –¥—Ä—É–≥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—è–º –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ</span>
                  </li>
                  <li className="flex items-start">
                    <span className="w-2 h-2 bg-primary-600 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                    <span>–ü–æ–∑–≤–æ–ª—è—é—Ç –º–Ω–µ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥</span>
                  </li>
                  <li className="flex items-start">
                    <span className="w-2 h-2 bg-primary-600 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                    <span>–°–æ–∑–¥–∞—é—Ç –¥–æ–≤–µ—Ä–∏–µ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å</span>
                  </li>
                  <li className="flex items-start">
                    <span className="w-2 h-2 bg-primary-600 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                    <span>–ü–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–π –æ–ø—ã—Ç —Å–µ–º–µ–π</span>
                  </li>
                </ul>
              </div>

              <div className="bg-primary-50 rounded-xl p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-3">
                  –ü—Ä–∞–≤–∏–ª–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                </h3>
                <ul className="space-y-2 text-sm text-gray-600">
                  <li>‚Ä¢ –û—Ç–∑—ã–≤—ã –ø—Ä–æ—Ö–æ–¥—è—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é</li>
                  <li>‚Ä¢ –ù–µ –ø—É–±–ª–∏–∫—É–µ–º –æ—Ç–∑—ã–≤—ã —Å –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è–º–∏</li>
                  <li>‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö</li>
                  <li>‚Ä¢ –ú–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–º—è –∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª—ã</li>
                </ul>
              </div>

              <div className="bg-white rounded-xl p-6 shadow-lg">
                <h3 className="text-lg font-semibold text-gray-900 mb-3">
                  –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å
                </h3>
                <p className="text-sm text-gray-600">
                  –í–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã. –ú—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º 
                  –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞ —Å –≤–∞—à–µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è.
                </p>
              </div>
            </motion.div>
          </div>
        </div>
      </div>
    </section>
  )
}
